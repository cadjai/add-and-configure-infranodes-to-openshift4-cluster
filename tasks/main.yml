---
- name: '{{ ansible_name_module }} | Retrieve Infrastructure ID'
  command: >
    {{ openshift_cli }} get -o jsonpath='{.status.infrastructureName}{"\n"}' \
       infrastructure cluster
  register: cluster_infra_id

- name: '{{ ansible_name_module }} | set_fact | set infra node label'
  set_fact:
    infra_label: "{{ infranode.role }}"

- name:  '{{ ansible_name_module }} | Set unique availability zones facts | set_fact'
  set_fact:
    unique_aws_zones: "{{ aws_zones| d([]) | unique }}"

- name:  '{{ ansible_name_module }} | Set missing nodes count facts | set_fact'
  set_fact:
    missing_node_machine_count: "{{ ((aws_zones | length | int)  - (unique_aws_zones | length | int)) }}"
    infra_replica_count_per_az: "{{ ((infra_instance_number | int) / (aws_zones | length | int)) | int }}"
    total_infra_az_one: "{{ (((infra_instance_number | int) / (aws_zones | length | int)) + ((aws_zones | length | int)  - (unique_aws_zones | length | int))) | int }}"

- name: '{{ ansible_name_module }} | template | Copy Infranode machineset template to staging location'
  template:
    src: "templates/infranode-machineset.yml.j2"
    dest: "{{ staging_dir | d('/tmp', true) }}/infra-az{{ key_cnt }}-infranode-machineset.yml"
  vars:
    infra_id: "{{ cluster_infra_id.stdout }}"
    aws_az: "{{ aws_zones[key_cnt] }}"
    node_sg: "{{ infranode.sg | d('worker', true) }}"
    node_profile: "{{ infranode.profile | d('worker', true) }}"
    node_role: "{{ infranode.role | d('worker', true) }}"
    node_type: "{{ infranode.type | d('worker', true) }}"
    node_replica_count: "{{ infra_replica_count_per_az | default('1', true) }}"
    node_ami: "{{ infranode.ami | d('ami-0d5f9982f029fbc14',true) }}"
    node_block_size: "{{ infranode.block_size | d('120', true) }}"
    node_volume_type: "{{ infranode.volume_type | d('gp2', true) }}"
    node_instance_type: "{{ infranode.instance_type | d('m5.4xlarge', true) }}"
    aws_region: "{{ item.value.aws_region | d('us-east-1') }}"
  loop: "{{ unique_aws_zones }}"
  loop_control:
    index_var: key_cnt
  register: infra_mahineset_config_copied

#### Process cases where we need more than a single node in one availability zone  ###
- name: '{{ ansible_name_module }} | duplicate availability zone adjustment'
  when:
    - missing_node_machine_count is defined
    - missing_node_machine_count | int > 0
  block:
    - name: '{{ ansible_name_module }} | find | list of infra node machinesets'
      find:
        path: "{{ staging_dir | d('/tmp', true) }}/"
        patterns: '*-infranode-machineset.yml'
      register: infra_machineset_file_list

    - name: '{{ ansible_name_module }} | set_fact | created infra machinesets'
      set_fact:
        infra_machineset_files_paths: "{{ infra_machineset_file_list.files  | map(attribute='path') | list }}"

    - name: '{{ ansible_name_module }} | replace | update replica count for first created infra machineset'
      replace:
        regexp: ' replicas: {{ infra_replica_count_per_az }}'
        replace: ' replicas: {{ total_infra_az_one | int }}'
        path: "{{ staging_dir | d('/tmp', true) }}/infra-az0-infranode-machineset.yml"
        #path: "{{ worker_machineset_files_paths[0] }}"

#### End Processing cases where we need more than a single node in one availability zone  ###

- name: '{{ ansible_name_module }} | command:{{ openshift_cli }} apply | deploy infra machinesets '
  command: >
    {{ openshift_cli }} apply -f {{ staging_dir | d('/tmp', true) }}/infra-az{{ key_cnt }}-infranode-machineset.yml
  loop: "{{ unique_aws_zones }}"
  loop_control:
    index_var: key_cnt

- name: '{{ ansible_name_module }} | wait_for | wait for machine to be created'
  wait_for:
    timeout: 300
  delegate_to: localhost
